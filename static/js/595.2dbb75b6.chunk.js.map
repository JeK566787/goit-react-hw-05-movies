{"version":3,"file":"static/js/595.2dbb75b6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/MoviesDetails/MoviesDetails.module.css?e2c8","pages/MoviesDetails/MoviesDetails.jsx","serevises/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loaderWrapper\":\"Loader_loaderWrapper__6ypwD\",\"ldsHourglass\":\"Loader_ldsHourglass__0jXeJ\",\"lds-hourglass\":\"Loader_lds-hourglass__+mmZL\"};","import css from './Loader.module.css';\n\nconst Loader = () => {\n  return (\n    <div className={css.loaderWrapper}>\n      <div className={css.ldsHourglass}></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MoviesDetails_wrapper__uiFnj\",\"detailsWrapper\":\"MoviesDetails_detailsWrapper__3Xc3B\",\"filmImg\":\"MoviesDetails_filmImg__mm2Td\",\"imgWrapper\":\"MoviesDetails_imgWrapper__kwRin\",\"linksWrapper\":\"MoviesDetails_linksWrapper__rj29f\",\"buttonLink\":\"MoviesDetails_buttonLink__se77X\"};","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport { getMoviesById } from 'serevises/API';\nimport Loader from 'components/Loader/Loader';\nimport css from './MoviesDetails.module.css';\n\nconst defaultImg =\n  'http://argauto.lv/application/modules/themes/views/default/assets/images/image-placeholder.png';\n\nconst MoviesDetails = () => {\n  const [movieData, setMovieData] = useState({});\n  const [isLoading, setLoading] = useState(true);\n\n  const { moviesId } = useParams();\n\n  const location = useLocation();\n\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!moviesId) return;\n\n    const fetchMovies = async () => {\n      try {\n        const data = await getMoviesById(moviesId);\n\n        setMovieData(data);\n      } catch (error) {\n        toast.error('something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [moviesId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = movieData;\n  console.log(movieData);\n\n  return (\n    <section className={css.wrapper}>\n      {/* <h1>MOVIE DETAILS</h1> */}\n      <Link className={css.buttonLink} to={backLink}>\n        GO BACK\n      </Link>\n      <div className={css.detailsWrapper}>\n        {/* <div>Movies Card Component</div> */}\n        <div className={css.imgWrapper}>\n          <img\n            className={css.filmImg}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : defaultImg\n            }\n            alt={`poster of movie ${original_title}`}\n          />\n        </div>\n        <div>\n          <h2>\n            {original_title} ({release_date && release_date.slice(0, 4)})\n          </h2>\n          <p>User score: {Math.ceil((vote_average * 100) / 10)} %</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>\n            {genres &&\n              genres.map(genre => {\n                const { id, name } = genre;\n                return <li key={id}>{name}</li>;\n              })}\n          </p>\n        </div>\n      </div>\n      <div className={css.linksWrapper}>\n        <Link className={css.buttonLink} to={'cast'} state={{ from: backLink }}>\n          Cast\n        </Link>\n        <Link\n          className={css.buttonLink}\n          to={'reviews'}\n          state={{ from: backLink }}\n        >\n          Reviews\n        </Link>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n      {isLoading && <Loader />}\n    </section>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: '4550a8eec95d666ba10dfff9664c0efb',\n};\n\nexport const getTrending = async () => {\n  const { data } = await axios.get('/trending/movie/day');\n  return data;\n};\n\nexport const getMoviesByQuery = async query => {\n  const params = { query: query };\n  const { data } = await axios.get('/search/movie', { params });\n  return data;\n};\n\nexport const getMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["className","css","useState","movieData","setMovieData","isLoading","setLoading","moviesId","useParams","location","useLocation","backLink","state","from","useEffect","fetchMovies","getMoviesById","data","toast","poster_path","original_title","release_date","overview","genres","vote_average","console","log","to","src","alt","slice","Math","ceil","map","genre","id","name","Suspense","fallback","Loader","axios","api_key","getTrending","getMoviesByQuery","query","params","getCast","getReviews"],"sourceRoot":""}